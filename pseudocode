게이지클래스(값, 최대값, 좌표){
    this.값 = 값
    this.최대값 = 최대값
    this.원의중심좌표 = (30 * 좌표 ,30)
    this.원의반지름 = (30)
    this.실제원의각도 = 0

    게이지배경만드는함수();
    
    게이지내용만드는함수(ref(실제원의각도), this.최대값);
    작은반원을그리는함수();
    게이지서서히늘리기(ref(실제원의각도));
}

게이지서서히늘리기(ref(실제원의각도)){
    for(var i = 0; i < this.값; i++){
        1초쉬기 ------------
        실제원의각도++;
    }
}

게이지배경만드는함수(){
    큰반원을그리는함수();
}

게이지내용만드는함수(실제원의각도, 최대값){
    원을그리는함수(원의중심좌표, 원의반지름, 파이 * 실제원의각도/최대값, 빨강);
}

큰반원을그리는함수(){
    원을그리는함수(원의중심좌표, 원의반지름, 파이, 회색);
}

작은반원을그리는함수(){
    원을그리는함수(원의중심좌표, 원의반지름 * 0.8, 파이, 배경색);
}

원을그리는함수(원의중심좌표, 원의반지름, 원의각도, 색깔){
    원 그리기 -------------
    원색지정하는함수(색깔)
}
원색지정하는함수(색깔){
    원 색 지정하기 -----------
}

게이지배열 = [5];

for(int i = 0 ; i < 게이지배열.갯수 ; i++){
    게이지배열[i] = 게이지클래스(i*10, 100, i);
}